{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\my-app\\\\src\\\\components1\\\\carDataProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Spinner from './spinner'; // Компонент Spinner для завантаження\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarDataProvider = ({\n  children\n}) => {\n  _s();\n  const [cars, setCars] = useState([]); // Державний масив для даних автомобілів\n  const [loading, setLoading] = useState(true); // Статус завантаження\n\n  useEffect(() => {\n    // Функція для отримання даних\n    const fetchCarData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/cars'); // Змінити URL на ваш API\n        setCars(response.data); // Зберігаємо дані в state\n      } catch (error) {\n        console.error(\"Error fetching car data:\", error);\n      } finally {\n        setLoading(false); // При будь-якому результаті припиняємо завантаження\n      }\n    };\n    fetchCarData(); // Виклик функції\n  }, []); // Порожній масив залежностей, щоб викликати тільки один раз\n\n  // Повертаємо спіннер, якщо дані ще завантажуються\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Передаємо завантажені дані дочірнім компонентам\n  return children(cars);\n};\n_s(CarDataProvider, \"gr7DGDca7Mg6xQMiodadoXjnamA=\");\n_c = CarDataProvider;\nexport default CarDataProvider;\nvar _c;\n$RefreshReg$(_c, \"CarDataProvider\");","map":{"version":3,"names":["React","useState","useEffect","Spinner","axios","jsxDEV","_jsxDEV","CarDataProvider","children","_s","cars","setCars","loading","setLoading","fetchCarData","response","get","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/my-app/src/components1/carDataProvider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Spinner from './spinner'; // Компонент Spinner для завантаження\r\nimport axios from 'axios';\r\n\r\nconst CarDataProvider = ({ children }) => {\r\n    const [cars, setCars] = useState([]); // Державний масив для даних автомобілів\r\n    const [loading, setLoading] = useState(true); // Статус завантаження\r\n\r\n    useEffect(() => {\r\n        // Функція для отримання даних\r\n        const fetchCarData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5001/api/cars'); // Змінити URL на ваш API\r\n                setCars(response.data); // Зберігаємо дані в state\r\n            } catch (error) {\r\n                console.error(\"Error fetching car data:\", error);\r\n            } finally {\r\n                setLoading(false); // При будь-якому результаті припиняємо завантаження\r\n            }\r\n        };\r\n\r\n        fetchCarData(); // Виклик функції\r\n    }, []); // Порожній масив залежностей, щоб викликати тільки один раз\r\n\r\n    // Повертаємо спіннер, якщо дані ще завантажуються\r\n    if (loading) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    // Передаємо завантажені дані дочірнім компонентам\r\n    return children(cars);\r\n};\r\n\r\nexport default CarDataProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACpEL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACNL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC;IAEDC,YAAY,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIF,OAAO,EAAE;IACT,oBAAON,OAAA,CAACH,OAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;;EAEA;EACA,OAAOf,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAACD,EAAA,CA3BIF,eAAe;AAAAiB,EAAA,GAAfjB,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}