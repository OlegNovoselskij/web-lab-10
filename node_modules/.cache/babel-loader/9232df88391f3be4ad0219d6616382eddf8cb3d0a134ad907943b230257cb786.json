{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WellDone\\\\Desktop\\\\LPNU\\\\web\\\\lab-8\\\\my-app\\\\src\\\\components1\\\\carDataProvider.js\",\n  _s = $RefreshSig$();\n// CarDataProvider.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarDataProvider = ({\n  children\n}) => {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Функція для отримання даних з сервера\n    const fetchCars = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/cars'); // Замість 'URL_ВАШОГО_СЕРВЕРА' підставте реальну адресу сервера\n        const data = await response.json();\n        setCars(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Помилка отримання даних:', error);\n        setLoading(false);\n      }\n    };\n    fetchCars();\n  }, []);\n\n  // Якщо йде завантаження, показуємо повідомлення\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Передаємо отримані дані через `children` проп\n  return children(cars);\n};\n_s(CarDataProvider, \"gr7DGDca7Mg6xQMiodadoXjnamA=\");\n_c = CarDataProvider;\nexport default CarDataProvider;\nvar _c;\n$RefreshReg$(_c, \"CarDataProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CarDataProvider","children","_s","cars","setCars","loading","setLoading","fetchCars","response","fetch","data","json","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/WellDone/Desktop/LPNU/web/lab-8/my-app/src/components1/carDataProvider.js"],"sourcesContent":["// CarDataProvider.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst CarDataProvider = ({ children }) => {\r\n    const [cars, setCars] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Функція для отримання даних з сервера\r\n        const fetchCars = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/api/cars'); // Замість 'URL_ВАШОГО_СЕРВЕРА' підставте реальну адресу сервера\r\n                const data = await response.json();\r\n                setCars(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Помилка отримання даних:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCars();\r\n    }, []);\r\n\r\n    // Якщо йде завантаження, показуємо повідомлення\r\n    if (loading) {\r\n        return <div>Завантаження...</div>;\r\n    }\r\n\r\n    // Передаємо отримані дані через `children` проп\r\n    return children(cars);\r\n};\r\n\r\nexport default CarDataProvider;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACM,IAAI,CAAC;QACbJ,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIF,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;;EAEA;EACA,OAAOhB,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAACD,EAAA,CA5BIF,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AA8BrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}